USE `soft_uni`;

-- task 01
SELECT 
    `e`.`employee_id`,
    `e`.`job_title`,
    `e`.`address_id`,
    `a`.`address_text`
FROM
    `employees` AS `e`
        JOIN
    `addresses` AS `a` ON `e`.`address_id` = `a`.`address_id`
ORDER BY `e`.`address_id`
LIMIT 5;

-- task 02
SELECT 
    `e`.`first_name`,
    `e`.`last_name`,
    `t`.`name` AS `town`,
    `a`.`address_text`
FROM
    `employees` AS `e`
        JOIN
    `addresses` AS `a` ON `e`.`address_id` = `a`.`address_id`
        JOIN
    `towns` AS `t` ON `a`.`town_id` = `t`.`town_id`
ORDER BY `e`.`first_name` , `e`.`last_name`
LIMIT 5;

-- task 03
SELECT 
    `e`.`employee_id`,
    `e`.`first_name`,
    `e`.`last_name`,
    `d`.`name` AS `department_name`
FROM
    `employees` AS `e`
        JOIN
    `departments` AS `d` ON `e`.`department_id` = `d`.`department_id`
WHERE
    `d`.`name` = 'Sales'
ORDER BY `e`.`employee_id` DESC;

-- task 04
SELECT 
    `e`.`employee_id`,
    `e`.`first_name`,
    `e`.`salary`,
    `d`.`name` AS `department_name`
FROM
    `employees` AS `e`
        JOIN
    `departments` AS `d` ON `e`.`department_id` = `d`.`department_id`
WHERE
    `e`.`salary` > 15000
ORDER BY `d`.`department_id` DESC
LIMIT 5;

-- task 05
SELECT 
    `e`.`employee_id`, `e`.`first_name`
FROM
    `employees` AS `e`
        LEFT JOIN
    `employees_projects` AS `p` ON `e`.`employee_id` = `p`.`employee_id`
WHERE
    `p`.`employee_id` IS NULL
ORDER BY `e`.`employee_id` DESC
LIMIT 3;

-- task 06
SELECT 
    `e`.`first_name`,
    `e`.`last_name`,
    `e`.`hire_date`,
    `d`.`name` AS `dept_name`
FROM
    `employees` AS `e`
        JOIN
    `departments` AS `d` ON `e`.`department_id` = `d`.`department_id`
WHERE
    DATE(`e`.`hire_date`) > '1999-01-01'
        AND `d`.`name` IN ('Sales' , 'Finance')
ORDER BY `e`.`hire_date`;

-- task 07
SELECT 
    `e`.`employee_id`, `e`.`first_name`, `p`.`name`
FROM
    `employees` AS `e`
        JOIN
    `employees_projects` AS `ep` ON `e`.`employee_id` = `ep`.`employee_id`
        JOIN
    `projects` AS `p` ON `ep`.`project_id` = `p`.`project_id`
WHERE
    DATE(`p`.`start_date`) > '2002-08-13'
        AND `p`.`end_date` IS NULL
ORDER BY `e`.`first_name` , `p`.`name`
LIMIT 5;

-- task 08
SELECT 
    `e`.`employee_id`,
    `e`.`first_name`,
    IF(YEAR(`p`.`start_date`) > 2004,
        NULL,
        `p`.`name`) AS `project_name`
FROM
    `employees` AS `e`
        JOIN
    `employees_projects` AS `ep` ON `e`.`employee_id` = `ep`.`employee_id`
        JOIN
    `projects` AS `p` ON `ep`.`project_id` = `p`.`project_id`
WHERE
    `e`.`employee_id` = 24
ORDER BY `e`.`first_name` , `p`.`name`
LIMIT 5;

-- task 09
SELECT 
    `e`.`employee_id`,
    `e`.`first_name`,
    `e`.`manager_id`,
    `em`.`first_name` AS `manager_name`
FROM
    `employees` AS `e`
        JOIN
    `employees` AS `em` ON `e`.`manager_id` = `em`.`employee_id`
WHERE
    `e`.`manager_id` IN (3 , 7)
ORDER BY `e`.`first_name`;

-- task 10
SELECT 
    `e`.`employee_id`,
    CONCAT(`e`.`first_name`, ' ', `e`.`last_name`) AS `employee_name`,
    CONCAT(`em`.`first_name`, ' ', `em`.`last_name`) AS `manager_name`,
    `d`.`name` AS `department_name`
FROM
    `employees` AS `e`
        JOIN
    `employees` AS `em` ON `e`.`manager_id` = `em`.`employee_id`
        JOIN
    `departments` AS `d` ON `e`.`department_id` = `d`.`department_id`
WHERE
    `e`.`manager_id` IS NOT NULL
ORDER BY `e`.`employee_id`
LIMIT 5;
    
-- task 11
SELECT 
    AVG(`salary`) AS `min_average_salary`
FROM
    `employees`
GROUP BY `department_id`
ORDER BY `min_average_salary`
LIMIT 1;

-- task 12
USE `geography`;

SELECT 
    `c`.`country_code`,
    `m`.`mountain_range`,
    `p`.`peak_name`,
    `p`.`elevation`
FROM
    `countries` AS `c`
        JOIN
    `mountains_countries` AS `mc` ON `c`.`country_code` = `mc`.`country_code`
        JOIN
    `mountains` AS `m` ON `mc`.`mountain_id` = `m`.`id`
        JOIN
    `peaks` AS `p` ON `m`.`id` = `p`.`mountain_id`
WHERE
    `c`.`country_name` = 'Bulgaria'
        AND `p`.`elevation` > 2835
ORDER BY `p`.`elevation` DESC;

-- task 13
SELECT 
    `c`.`country_code`,
    COUNT(`m`.`mountain_range`) AS `mountain_range`
FROM
    `countries` AS `c`
        JOIN
    `mountains_countries` AS `mc` ON `c`.`country_code` = `mc`.`country_code`
        JOIN
    `mountains` AS `m` ON `mc`.`mountain_id` = `m`.`id`
WHERE
    `c`.`country_name` IN ('United States' , 'Russia', 'Bulgaria')
GROUP BY `c`.`country_code`
ORDER BY `mountain_range` DESC;

-- task 14
SELECT 
    `c`.`country_name`, IFNULL(NULL, `r`.`river_name`)
FROM
    `continents` AS `cont`
        JOIN
    `countries` AS `c` ON `cont`.`continent_code` = `c`.`continent_code`
        LEFT JOIN
    `countries_rivers` AS `cr` ON `c`.`country_code` = `cr`.`country_code`
        LEFT JOIN
    `rivers` AS `r` ON `cr`.`river_id` = `r`.`id`
WHERE
    `cont`.`continent_name` = 'Africa'
ORDER BY `c`.`country_name`
LIMIT 5;

-- task 15
CREATE TABLE IF NOT EXISTS `continents_currencies` AS SELECT `c`.`continent_code`,
    `c`.`currency_code`,
    COUNT(`c`.`currency_code`) AS `currency_usage` FROM
    `countries` AS `c`
GROUP BY `c`.`continent_code`,`c`.`currency_code`
HAVING `currency_usage` > 1
ORDER BY `c`.`continent_code` , `c`.`currency_code`;

SELECT 
    `cc`.*
FROM
    `continents_currencies` AS `cc`
        LEFT JOIN
    `continents_currencies` AS `cc2` ON `cc`.`continent_code` = `cc2`.`continent_code`
        AND `cc`.`currency_usage` < `cc2`.`currency_usage`
WHERE
    `cc2`.`currency_usage` IS NULL;
    
DROP TABLE `continents_currencies`;

-- task 16
SELECT 
    ((SELECT 
            COUNT(`country_code`)
        FROM
            `countries`) - (SELECT DISTINCT
            COUNT(DISTINCT `country_code`)
        FROM
            `mountains_countries`)) AS `country_count`;
            
-- task 17
SELECT 
    `c`.`country_name`,
    `p`.`elevation` AS `highest_peak_elevation`,
    `r`.`length` AS `longest_river_length`
FROM
    `countries` AS `c`
        JOIN
    `mountains_countries` AS `mc` ON `c`.`country_code` = `mc`.`country_code`
        JOIN
    `peaks` AS `p` ON `mc`.`mountain_id` = `p`.`mountain_id`
        JOIN
    `countries_rivers` AS `cr` ON `c`.`country_code` = `cr`.`country_code`
        JOIN
    `rivers` AS `r` ON `cr`.`river_id` = `r`.`id`
GROUP BY `c`.`country_name`
ORDER BY `p`.`elevation` DESC , `r`.`length` DESC , `c`.`country_name`
LIMIT 5;           

    