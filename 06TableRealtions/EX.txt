-- task 01
CREATE TABLE IF NOT EXISTS `persons` (
    `person_id` INT,
    `first_name` VARCHAR(50),
    `salary` DECIMAL(10 , 2 ),
    `passport_id` INT UNIQUE
);

CREATE TABLE IF NOT EXISTS `passports` (
    `passport_id` INT,
    `passport_number` VARCHAR(50)
);

INSERT INTO `persons` VALUES  
(1,'Roberto',43300.00,102),
(2,'Tom',56100.00,103),
(3,'Yana',60200.00,101);

INSERT INTO `passports` VALUES 
(101,'N34FG21B'),
(102,'K65LO4R7'),
(103,'ZE657QP2');

ALTER TABLE `passports`
	ADD CONSTRAINT `PK_passport_id`
		PRIMARY KEY (`passport_id`);
        
ALTER TABLE `persons`
	ADD CONSTRAINT `PK_person_id`
		PRIMARY KEY (`person_id`),   
	ADD CONSTRAINT `FK_persons_passports`
    FOREIGN KEY (`passport_id`) 
		REFERENCES `passports`(`passport_id`);


-- task 02
CREATE TABLE IF NOT EXISTS `manufacturers` (
    `manufacturer_id` INT,
    `name` VARCHAR(50),
    `established_on` DATE
);

CREATE TABLE IF NOT EXISTS `models` (
    `model_id` INT,
    `name` VARCHAR(50),
    `manufacturer_id` INT
);

ALTER TABLE `manufacturers`
	ADD CONSTRAINT `PK_manufacturer_id`
		PRIMARY KEY (`manufacturer_id`);
        
ALTER TABLE `models`
	ADD CONSTRAINT `PK_model_id`
		PRIMARY KEY (`model_id`),
	ADD CONSTRAINT `FK_models_manufacturers`
		FOREIGN KEY (`manufacturer_id`)
			REFERENCES `manufacturers`(`manufacturer_id`);

INSERT INTO `manufacturers` VALUES
(1,'BMW',STR_TO_DATE('01/03/1916','%d/%m/%Y')),
(2,'Tesla',STR_TO_DATE('01/01/2003','%d/%m/%Y')),
(3,'Lada',STR_TO_DATE('01/05/1966','%d/%m/%Y'));

INSERT INTO `models` VALUES
(101,'X1',1),
(102,'i6',1),
(103,'Model S',2),
(104,'Model X',2),
(105,'Model 3',2),
(106,'Nova',3);

-- task 03
CREATE TABLE IF NOT EXISTS `students` (
    `student_id` INT,
    `name` VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS `exams` (
    `exam_id` INT,
    `name` VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS `students_exams` (
    `student_id` INT,
    `exam_id` INT
);

ALTER TABLE `students`
	ADD CONSTRAINT `PK_student_id`
		PRIMARY KEY (`student_id`);
                
ALTER TABLE `exams`
	ADD CONSTRAINT `PK_exam_id`
		PRIMARY KEY (`exam_id`);
        
ALTER TABLE `students_exams`
	ADD CONSTRAINT `PK_student_id_exam_id`
		PRIMARY KEY (`student_id`,`exam_id`),
	ADD CONSTRAINT `FK_students_exams_student_id`
		FOREIGN KEY (`student_id`)
			REFERENCES `students`(`student_id`),
	ADD CONSTRAINT `FK_students_exams_exam_id`
		FOREIGN KEY (`exam_id`)
			REFERENCES `exams`(`exam_id`);
        
INSERT INTO `students` VALUES
(1,'Mila'),
(2,'Toni'),
(3,'Ron');

INSERT INTO `exams` VALUES
(101,'Spring MVC'),
(102,'Neo4j'),
(103,'Oracle 11g');

INSERT INTO `students_exams` VALUES
(1,101),
(1,102),
(2,101),
(3,103),
(2,102),
(2,103);

-- task 04
CREATE TABLE IF NOT EXISTS `teachers` (
    `teacher_id` INT,
    `name` VARCHAR(50),
    `manager_id` INT
);

ALTER TABLE `teachers`
	ADD CONSTRAINT `PK_teacher_id`
		PRIMARY KEY (`teacher_id`);
        
INSERT INTO `teachers` VALUES
(101,'John',NULL),
(102,'Maya',106),
(103,'Silvia',106),
(104,'Ted',105),
(105,'Mark',101),
(106,'Greta',101);

ALTER TABLE `teachers`
	ADD CONSTRAINT `FK_teachers_teacher_id_manager_id`
		FOREIGN KEY (`manager_id`)
			REFERENCES `teachers`(`teacher_id`);
			
-- task 05
CREATE TABLE IF NOT EXISTS `cities` (
    `city_id` INT PRIMARY KEY,
    `name` VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS `customers` (
    `customer_id` INT PRIMARY KEY,
    `name` VARCHAR(50),
    `birthday` DATE,
    `city_id` INT,
    FOREIGN KEY (`city_id`)
        REFERENCES `cities` (`city_id`)
);

CREATE TABLE IF NOT EXISTS `orders` (
    `order_id` INT PRIMARY KEY,
    `customer_id` INT,
    FOREIGN KEY (`customer_id`)
        REFERENCES `customers` (`customer_id`)
);

CREATE TABLE IF NOT EXISTS `item_types` (
    `item_type_id` INT PRIMARY KEY,
    `name` VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS `items` (
    `item_id` INT PRIMARY KEY,
    `name` VARCHAR(50),
    `item_type_id` INT,
    FOREIGN KEY (`item_type_id`)
        REFERENCES `item_types` (`item_type_id`)
);

CREATE TABLE IF NOT EXISTS `order_items` (
    `order_id` INT,
    `item_id` INT,
    PRIMARY KEY (`order_id` , `item_id`),
    FOREIGN KEY (`order_id`)
        REFERENCES `orders` (`order_id`),
    FOREIGN KEY (`item_id`)
        REFERENCES `items` (`item_id`)
);

-- task 06
CREATE TABLE IF NOT EXISTS `majors` (
    `major_id` INT PRIMARY KEY,
    `name` VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS `subjects` (
    `subject_id` INT PRIMARY KEY,
    `subject_name` VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS `students` (
    `student_id` INT PRIMARY KEY,
    `student_number` VARCHAR(12),
    `student_name` VARCHAR(50),
    `major_id` INT,
    FOREIGN KEY (`major_id`)
        REFERENCES `majors` (`major_id`)
);

CREATE TABLE IF NOT EXISTS `payments` (
    `payment_id` INT PRIMARY KEY,
    `payment_date` DATE,
    `payment_amount` DECIMAL(8 , 2 ),
    `student_id` INT,
    FOREIGN KEY (`student_id`)
        REFERENCES `students` (`student_id`)
);

CREATE TABLE IF NOT EXISTS `agenda` (
    `student_id` INT,
    `subject_id` INT,
    PRIMARY KEY (`student_id` , `subject_id`),
    FOREIGN KEY (`student_id`)
        REFERENCES `students` (`student_id`),
    FOREIGN KEY (`subject_id`)
        REFERENCES `subjects` (`subject_id`)
);

-- task 09
USE `geography`;

SELECT 
    `mountains`.`mountain_range`,
    `peaks`.`peak_name`,
    `peaks`.`elevation` AS `peak_elevation`
FROM
    `mountains`
        JOIN
    `peaks` ON `peaks`.`mountain_id` = `mountains`.`id`
HAVING `mountain_range` = 'Rila'
ORDER BY `peak_elevation` DESC;			