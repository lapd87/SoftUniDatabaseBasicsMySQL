-- task 01
CREATE DATABASE `minions`;

USE `minions`;

-- task 02
CREATE TABLE IF NOT EXISTS `minions` (
  `id` int(11) AUTO_INCREMENT PRIMARY KEY,
  `name` varchar(50),
  `age` int(3)
);

CREATE TABLE IF NOT EXISTS `towns` (
  `id` int(11) AUTO_INCREMENT PRIMARY KEY,
  `name` varchar(50) NOT NULL
);

-- task 03
ALTER TABLE `minions`
	ADD `town_id` int(11);

ALTER TABLE `minions`
	ADD CONSTRAINT `FK_minions_towns` 
	FOREIGN KEY (`town_id`) REFERENCES `towns` (`id`);

-- task 04
INSERT INTO `towns` (`id`,`name`)
	VALUES (1,'Sofia'),
		(2,'Plovdiv'),
		(3,'Varna');

INSERT INTO `minions` (`id`,`name`,`age`,`town_id`)
	VALUES (1,'Kevin',22,1),
		(2,'Bob',15,3),
		(3,'Steward',NULL,2);
		
-- task 05
TRUNCATE TABLE `minions`;

-- task 06
DROP TABLE `minions`;
DROP TABLE `towns`;

-- taks 07
CREATE TABLE IF NOT EXISTS `people`(
  `id` int(11) AUTO_INCREMENT PRIMARY KEY,
  `name` varchar(200) NOT NULL,
  `picture` MEDIUMBLOB,
  `height` DECIMAL,
  `weight` DECIMAL,
  `gender` ENUM('m','f') NOT NULL,
  `birthdate` DATE NOT NULL,
  `biography` TEXT
);

INSERT INTO `people` (`name`,`gender`,`birthdate`)
	VALUES ('Kevin',1,'2015-04-03'),
		('Boby',2,'2010-09-06'),
		('Steward',1,'2003-06-08'),
		('Boly',2,'2011-09-06'),
		('Streward',1,'2005-06-08');

-- task 08
CREATE TABLE IF NOT EXISTS `users`(
  `id` int(20) AUTO_INCREMENT PRIMARY KEY,
  `username` varchar(30) UNIQUE NOT NULL,
  `password` varchar(26) NOT NULL,
  `profile_picture` MEDIUMBLOB,
  `last_login_time` DATETIME,
  `is_deleted` ENUM('true','false')
);

INSERT INTO `users` (`username`,`password`,`is_deleted`)
	VALUES ('Kevin','Kevin',1),
		('Boby','Kevin',2),
		('Steward','Kevin',1),
		('Boly','Kevin',2),
		('Streward','Kevin',1);
		
-- task 09
ALTER TABLE `users`
DROP PRIMARY KEY,
ADD CONSTRAINT `pk_users` PRIMARY KEY (`id`,`username`);

-- task 10
ALTER TABLE `users`
MODIFY COLUMN `last_login_time` DATETIME DEFAULT CURRENT_TIMESTAMP;

-- task 11
ALTER TABLE `users`
DROP PRIMARY KEY,
ADD PRIMARY KEY (`id`);

ALTER TABLE `users`
ADD UNIQUE (`username`);


-- taks 12
CREATE DATABASE `Movies`;

USE `Movies`;

CREATE TABLE IF NOT EXISTS `directors`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`director_name` VARCHAR(50) NOT NULL,
	`notes` TEXT
);

INSERT INTO `directors` (`director_name`)
	VALUES ('Kiro'),
		('Miro'),
		('Tosho'),
		('Gosho'),
		('Ani');

CREATE TABLE IF NOT EXISTS `genres`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`genre_name` VARCHAR(50) NOT NULL,
	`notes` TEXT
);

INSERT INTO `genres` (`genre_name`)
	VALUES ('KiroG'),
		('MiroG'),
		('ToshoG'),
		('GoshoG'),
		('AniG');

CREATE TABLE IF NOT EXISTS `categories`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`category_name` VARCHAR(50) NOT NULL,
	`notes` TEXT
);

INSERT INTO `categories` (`category_name`)
	VALUES ('KiroC'),
		('MiroC'),
		('ToshoC'),
		('GoshoC'),
		('AniC');

CREATE TABLE IF NOT EXISTS `movies`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`title` VARCHAR(50) NOT NULL,
	`director_id` INT,
	`copyright_year` YEAR,
	`length` INT(3),
	`genre_id` INT,
	`category_id` INT,
	`rating` DECIMAL,
	`notes` TEXT
);
	
INSERT INTO `movies` (`title`)
	VALUES ('KiroM'),
		('MiroM'),
		('ToshoM'),
		('GoshoM'),
		('AniM');	

-- task 13
CREATE DATABASE `car_rental`;

USE `car_rental`;

CREATE TABLE IF NOT EXISTS `categories`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`category` VARCHAR(50) NOT NULL,
	`daily_rate` DECIMAL,
	`weekly_rate` DECIMAL,
	`monthly_rate` DECIMAL,	
	`weekend_rate` DECIMAL
);

INSERT INTO `categories` (`category`)
	VALUES ('Van'),
		('Sedan'),
		('4x4');
		
CREATE TABLE IF NOT EXISTS `cars`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`plate_number` VARCHAR(50) NOT NULL UNIQUE,
	`make` VARCHAR(50),
	`model` VARCHAR(50),
	`car_year` INT(4),	
	`category_id` INT,
	`doors` INT(1),
	`picture` LONGBLOB,
	`car_condition` VARCHAR(50) DEFAULT 0,
	`available` ENUM ('true','false')
);

INSERT INTO `cars` (`plate_number`)
	VALUES ('Van123'),
		('Sedan123'),
		('4x4--');
		
CREATE TABLE IF NOT EXISTS `employees`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`first_name` VARCHAR(50),
	`last_name` VARCHAR(50) NOT NULL,
	`title` VARCHAR(50),
	`notes` TEXT
);				

INSERT INTO `employees`(`last_name`)
	VALUES ('Ivan'),
		('Petkan'),
		('Pesho');
		
CREATE TABLE IF NOT EXISTS `customers`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`driver_licence_number` VARCHAR(50),
	`full_name` VARCHAR(50) NOT NULL,
	`address` VARCHAR(50),
	`city` VARCHAR(50),
	`zip_code` INT,
	`notes` TEXT
);

INSERT INTO `customers`(`full_name`)
	VALUES ('P.P'),
		('D.D'),
		('A.A');
		
CREATE TABLE IF NOT EXISTS `rental_orders`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`employee_id` INT NOT NULL,
	`customer_id` INT NOT NULL,					
	`car_id` INT NOT NULL,
	`car_condition` VARCHAR(50) DEFAULT 0,
	`tank_level` DECIMAL,
	`kilometrage_start` INT(7),
	`kilometrage_end` INT(7),
	`total_kilometrage` INT(7),
	`start_date` DATETIME,
	`end_date` DATETIME,
	`total_days` INT(4),
	`rate_applied` DECIMAL,
	`tax_rate` DECIMAL,
	`order_status` VARCHAR(50),
	`notes` TEXT
);
		
INSERT INTO `rental_orders` (`employee_id`,`customer_id`,`car_id`)
	VALUES (1,1,1),
		(2,2,2),
		(3,3,3);

-- task 14
CREATE DATABASE `Hotel`;

USE `Hotel`;

CREATE TABLE IF NOT EXISTS `employees`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`first_name` VARCHAR(50),
	`last_name` VARCHAR(50) NOT NULL,
	`title` VARCHAR(50),
	`notes` TEXT
);	

INSERT INTO `employees`(`last_name`)
	VALUES ('Petrov'),
		('Ivanov'),
		('Dimitrov');		

CREATE TABLE IF NOT EXISTS `customers`(
	`account_number` VARCHAR(50) UNIQUE PRIMARY KEY,
	`first_name` VARCHAR(50),
	`last_name` VARCHAR(50) NOT NULL,
	`phone_number` VARCHAR(50),
	`emergency_name` VARCHAR(50),
	`emergency_number` VARCHAR(50),
	`notes` TEXT
);

INSERT INTO `customers`(`account_number`,`last_name`)
	VALUES ('122','Petrov'),
		('123412','Ivanov'),
		('1212341','Dimitrov');	

CREATE TABLE IF NOT EXISTS `room_status`(
	`room_status` VARCHAR(50) NOT NULL PRIMARY KEY,
	`notes` TEXT
);

INSERT INTO `room_status`(`room_status`)
	VALUES ('ready'),
		('empty'),
		('occupied');	

CREATE TABLE IF NOT EXISTS `room_types`(
	`room_type` VARCHAR(50) NOT NULL PRIMARY KEY,
	`notes` TEXT
);

INSERT INTO `room_types`(`room_type`)
	VALUES ('single'),
		('double'),
		('appartment');	


CREATE TABLE IF NOT EXISTS `bed_types`(
	`bed_type` VARCHAR(50) NOT NULL PRIMARY KEY,
	`notes` TEXT
);

INSERT INTO `bed_types`(`bed_type`)
	VALUES ('single'),
		('double'),
		('king');

CREATE TABLE IF NOT EXISTS `rooms`(
	`room_number` INT(4) NOT NULL PRIMARY KEY,
	`room_type` VARCHAR(50) NOT NULL,
	`bed_type` VARCHAR(50) NOT NULL,
	`rate` DECIMAL NOT NULL,
	`room_status` VARCHAR(50) NOT NULL,	
	`notes` TEXT
);

INSERT INTO `rooms`(`room_number`,`room_type`,`bed_type`,`rate`,`room_status`)
	VALUES (124,'dsfs','dsfs',124.21,'dsfs'),
		(1214,'dsfs','dsfs',1231.21,'dsfdfsds'),
		(1224,'dsfs','dsfs',112114.21,'dssdfsfssdffs');

CREATE TABLE IF NOT EXISTS `occupancies`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`employee_id` INT,
	`date_occupied` DATETIME,
	`account_number` VARCHAR(50),
	`room_number` INT(4) NOT NULL,
	`rate_applied` DECIMAL,
	`phone_charge` DECIMAL,
	`notes` TEXT
);

INSERT INTO `occupancies`(`room_number`)
	VALUES (2),
		(3),
		(3);
	
CREATE TABLE IF NOT EXISTS `payments`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`employee_id` INT,
	`payment_date` DATETIME,
	`account_number` VARCHAR(50) NOT NULL,
	`first_date_occupied` DATETIME,
	`last_date_occupied` DATETIME,
	`total_days` INT(4),
	`amount_charged` DECIMAL,
	`tax_rate` DECIMAL,
	`tax_amount` DECIMAL,
	`payment_total` DECIMAL NOT NULL,
	`notes` TEXT
);	

INSERT INTO `payments`(`account_number`,`payment_total`)
	VALUES ('1',3),
		('2',3),
		('1',2);
		
-- task 15
CREATE DATABASE `soft_uni`;

USE `soft_uni`;

CREATE TABLE IF NOT EXISTS `towns`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`name` VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS `addresses`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`address_text`  TEXT NOT NULL,
	`town_id` INT
);

CREATE TABLE IF NOT EXISTS `departments`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`name` VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS `employees`(
	`id` INT AUTO_INCREMENT PRIMARY KEY,
	`first_name` VARCHAR(50) NOT NULL,
	`middle_name` VARCHAR(50),
	`last_name` VARCHAR(50) NOT NULL,
	`job_title` VARCHAR(50) NOT NULL,
	`department_id` INT,
	`hire_date` DATE,
	`salary` DECIMAL (6,2) NOT NULL,
	`address_id` INT
);

ALTER TABLE `addresses`
	ADD CONSTRAINT `FK_addresses_towns`
	FOREIGN KEY (`town_id`) REFERENCES `towns`(`id`);

ALTER TABLE `employees`
	ADD CONSTRAINT `FK_employees_departments`
	FOREIGN KEY (`department_id`) REFERENCES `departments`(`id`),
	ADD CONSTRAINT `FK_employees_addresses`
	FOREIGN KEY (`address_id`) REFERENCES `addresses`(`id`);
	
-- task 16

-- task 17
INSERT INTO `towns`(`name`)
	VALUES ('Sofia'),
		('Plovdiv'),
		('Varna'),
		('Burgas');
		
INSERT INTO `departments`(`name`)
	VALUES ('Engineering'),
		('Sales'),
		('Marketing'),
		('Software Development'),
		('Quality Assurance');		
		
INSERT INTO `employees`(`first_name`,`middle_name`,`last_name`,`job_title`,`department_id`,`hire_date`,`salary`)
	VALUES ('Ivan','Ivanov','Ivanov','.NET Developer',4,STR_TO_DATE('01/02/2013','%d/%m/%Y'),3500.00),
		('Petar','Petrov','Petrov','Senior Engineer',1,STR_TO_DATE('02/03/2004','%d/%m/%Y'),4000.00),
		('Maria','Petrova','Ivanova','Intern',5,STR_TO_DATE('28/08/2016','%d/%m/%Y'),525.25),
		('Georgi','Terziev','Ivanov','CEO',2,STR_TO_DATE('09/12/2007','%d/%m/%Y'),3000.00),
		('Peter','Pan','Pan','Intern',3,STR_TO_DATE('28/08/2016','%d/%m/%Y'),599.88);

-- task 18
SELECT * FROM `towns`;

SELECT * FROM `departments`;

SELECT * FROM `employees`;		

-- task  19
SELECT * FROM `towns` ORDER BY `name`;

SELECT * FROM `departments` ORDER BY `name`;

SELECT * FROM `employees` ORDER BY `salary` DESC;

-- task 20
SELECT `name` FROM `towns` 
	ORDER BY `name`;

SELECT `name` FROM `departments` 
	ORDER BY `name`;

SELECT `first_name`,`last_name`,`job_title`,`salary` FROM `employees` 
	ORDER BY `salary` DESC;
	
-- task 21
UPDATE `employees`
	SET `salary` = `salary`*1.1;
	
SELECT `salary` FROM `employees`;	

-- task 22
USE `hotel`

UPDATE `payments`
	SET `tax_rate` = `tax_rate`*0.97;
	
SELECT `tax_rate` FROM `payments`;

-- task 23
USE `hotel`

TRUNCATE TABLE `occupancies`
	